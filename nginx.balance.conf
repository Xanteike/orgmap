upstream jira-server {
    server 10.0.1.6:8080;
}

upstream git-server {
    server 10.0.1.5;
}

upstream registry-server {
    server 10.0.1.5:8090;
}

upstream backend-server {
    server localhost:3000;
}

upstream frontend-server {
    server localhost:81;
}

upstream swagger-server {
    server localhost:8080;
}


server {
    listen 80;
    server_name jira.einsof.tech;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name jira.einsof.tech;

    ssl_certificate /etc/letsencrypt/live/jira.einsof.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/jira.einsof.tech/privkey.pem;

    location / {
        proxy_pass http://jira-server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 80;
    server_name git.einsof.tech;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name git.einsof.tech;

    ssl_certificate /etc/letsencrypt/live/git.einsof.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/git.einsof.tech/privkey.pem;

    client_max_body_size 1024m;

    location / {
        proxy_pass http://git-server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}


server {
    listen 80;
    server_name mvp.einsof.tech;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name mvp.einsof.tech;

    ssl_certificate /etc/letsencrypt/live/mvp.einsof.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mvp.einsof.tech/privkey.pem;

    client_max_body_size 1024m;

    location / {
        proxy_pass http://frontend-server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

     location /api {
        proxy_pass http://backend-server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

     location /auth {
        proxy_pass http://backend-server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 443 ssl;
    server_name swagger.einsof.tech;

    ssl_certificate /etc/letsencrypt/live/swagger.einsof.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/swagger.einsof.tech/privkey.pem;

    client_max_body_size 1024m;

     location / {
        proxy_pass http://swagger-server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

}


server {
    listen 443 ssl http2;
    server_name registry.einsof.tech;

    ssl_certificate /etc/letsencrypt/live/registry.einsof.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/registry.einsof.tech/privkey.pem;

    client_max_body_size 2000M;
    chunked_transfer_encoding on;

    proxy_read_timeout 900;
    proxy_connect_timeout 900;
    proxy_send_timeout 900;


    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;

    location / {
        proxy_pass http://registry-server;

        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Ssl on;

        proxy_request_buffering off;
        proxy_buffering off;

        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }


    location /v2/ {
        proxy_pass http://registry-server;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Ssl on;

        proxy_request_buffering off;
        proxy_buffering off;

        proxy_http_version 1.1;
        proxy_set_header Connection "";

        add_header 'Docker-Distribution-Api-Version' 'registry/2.0' always;
    }
}
